<project name="DevFortress" basedir="." default="main">
    <property name="src.dir" value="${basedir}/src"/>
    <!--<property name="config.dir" value="${src.dir}/config"/>-->
    <property name="build.dir" value="${basedir}/tmp/classes"/>
    <property name="lib.dir" value="${basedir}/lib"/> 
    <property name="test.dir" value="${basedir}/test/raports"/> 

  <path id="classpath">
    <fileset dir="./lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="classpathResin">
    <fileset dir="../../../lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <!-- PATTERN SETS -->
  <patternset id="sources" >
    <include name="**/*"/>
  </patternset>


  <target name="jar" >
    <mkdir dir="${basedir}/tmp/classes"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="on" debuglevel="lines,vars,source" encoding="UTF-8" source="1.5" target="1.5" >
      <!--<compilerarg value="-Xlint:deprecated"/> Pour le d<E9>tail des warnings deprecated. Utiliser -Xlint pour tous les warnings -->
          <patternset refid="sources"/>
      <classpath refid="classpath"/>
        </javac>
    <jar jarfile="${lib.dir}/library.jar" basedir="${build.dir}" >
          <patternset refid="sources"/>
        </jar>
  </target>

  <!-- compile and run the unversionned /WEB-INF/src/test.java file with all libs in /lib/ in the classpath -->
  <target name="test" depends="jar">
  <junit printsummary="yes" haltonfailure="yes">
    <!--<classpath>
      <pathelement location="${lib.dir}/junit-4.7.jar"/>
      <pathelement location="${lib.dir}"/>
      <pathelement location="${build.dir}"/>
      <pathelement path="${java.class.path}"/>
    </classpath>-->
    <classpath refid="classpath" />
    <classpath refid="classpathResin" />
    <!-- -->
    <!--<test fork="yes" name="library.test.SubscriptionTest" todir="${test.dir}"
          haltonfailure="no" outfile="SubscriptionTest">
      <formatter type="plain"/>
    </test>-->
    <!--<test fork="yes" name="library.test.XSSCleanerTest" todir="${test.dir}"
          haltonfailure="no" outfile="XSSCleanerTest">
      <formatter type="plain"/>
    </test>-->
    <!-- <test fork="yes" name="library.test.SpelTest" todir="${test.dir}"
          haltonfailure="no" outfile="SpelTest">
      <formatter type="plain"/>
    </test> -->
    <!--<test fork="yes" name="library.test.ToolTest" todir="${test.dir}"
          haltonfailure="no" outfile="ToolTest">
      <formatter type="plain"/>
    </test>-->
    <!--<test fork="yes" name="library.test.SuggestionControllerTest" todir="${test.dir}"
          haltonfailure="no" outfile="SuggestionControllerTest">
      <formatter type="plain"/>
    </test>-->
    <test fork="yes" name="library.test.NewsletterSenderAsyncTest" todir="${test.dir}"
          haltonfailure="no" outfile="NewsletterSenderAsyncTest">
      <formatter type="plain"/>
    </test>
    <!--<test fork="yes" name="library.test.SubscriptionControllerTest" todir="${test.dir}"
          haltonfailure="no" outfile="SubscriptionControllerTest">
      <formatter type="plain"/>
    </test>-->
    <!--<test fork="yes" name="library.test.BookingControllerTest" todir="${test.dir}"
          haltonfailure="no" outfile="BookingControllerTest">
      <formatter type="plain"/>
    </test>-->
  </junit>
  </target>
</project>