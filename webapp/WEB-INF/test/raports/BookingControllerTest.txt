Testsuite: library.test.BookingControllerTest
Tests run: 2, Failures: 0, Errors: 0, Time elapsed: 7,097 sec
------------- Standard Output ---------------
Test launches with anonymousUser :org.springframework.security.authentication.AnonymousAuthenticationToken@52a3d06d: Principal: anonymous; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ANONYMOUS
Test launches with frontendUser :library.security.AuthenticationFrontendUserDetails@ec25a4b5: Username: bartosz; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_USER
Hibernate: select subscriber0_.id_su as id1_28_, subscriber0_.blacklisted_su as blacklis2_28_, subscriber0_.booking_nb_su as booking3_28_, subscriber0_.confirmed_su as confirmed4_28_, subscriber0_.created_su as created5_28_, subscriber0_.email_su as email6_28_, subscriber0_.login_su as login7_28_, subscriber0_.password_su as password8_28_, subscriber0_.revival_su as revival9_28_ from subscriber subscriber0_ where subscriber0_.login_su=? limit ?
Hibernate: select bookcopy0_.id_bc as id1_3_1_, bookcopy0_.book_id_bo as book5_3_1_, bookcopy0_.code_bc as code2_3_1_, bookcopy0_.condition_bc as condition3_3_1_, bookcopy0_.state_bc as state4_3_1_, book1_.id_bo as id1_1_0_, book1_.added_bo as added2_1_0_, book1_.alias_bo as alias3_1_0_, book1_.updated_bo as updated4_1_0_ from book_copy bookcopy0_ left outer join book book1_ on bookcopy0_.book_id_bo=book1_.id_bo where bookcopy0_.id_bc=?
Hibernate: select subscriber0_.id_su as id1_28_, subscriber0_.blacklisted_su as blacklis2_28_, subscriber0_.booking_nb_su as booking3_28_, subscriber0_.confirmed_su as confirmed4_28_, subscriber0_.created_su as created5_28_, subscriber0_.email_su as email6_28_, subscriber0_.login_su as login7_28_, subscriber0_.password_su as password8_28_, subscriber0_.revival_su as revival9_28_ from subscriber subscriber0_ where subscriber0_.login_su=? limit ?
Hibernate: select booking0_.book_copy_id_bc as book1_6_0_, booking0_.subscriber_id_su as subscriber2_6_0_, booking0_.added_boo as added3_6_0_, booking0_.date_boo as date4_6_0_, booking0_.state_boo as state5_6_0_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
====> Booking Booking [bookingPK = null, bookingDate = Thu Feb 21 14:44:48 CET 2013, addedDate = Wed Feb 20 14:44:48 CET 2013, state = 0]
Hibernate: update booking set added_boo=?, date_boo=?, state_boo=? where book_copy_id_bc=? and subscriber_id_su=?
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and (booking0_.date_boo between ? and ? or booking0_.date_boo between curdate() and ?)
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
BindingResult org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'target' on field 'bookingDate': rejected value [Thu Feb 21 14:44:48 CET 2013]; codes [date.taken.target.bookingDate,date.taken.bookingDate,date.taken.java.util.Date,date.taken]; arguments []; default message [Somebody else has already booked the book for this date]
Hibernate: select subscriber0_.id_su as id1_28_, subscriber0_.blacklisted_su as blacklis2_28_, subscriber0_.booking_nb_su as booking3_28_, subscriber0_.confirmed_su as confirmed4_28_, subscriber0_.created_su as created5_28_, subscriber0_.email_su as email6_28_, subscriber0_.login_su as login7_28_, subscriber0_.password_su as password8_28_, subscriber0_.revival_su as revival9_28_ from subscriber subscriber0_ where subscriber0_.login_su=? limit ?
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and (booking0_.date_boo between ? and ? or booking0_.date_boo between curdate() and ?)
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
Hibernate: select subscriber0_.id_su as id1_28_, subscriber0_.blacklisted_su as blacklis2_28_, subscriber0_.booking_nb_su as booking3_28_, subscriber0_.confirmed_su as confirmed4_28_, subscriber0_.created_su as created5_28_, subscriber0_.email_su as email6_28_, subscriber0_.login_su as login7_28_, subscriber0_.password_su as password8_28_, subscriber0_.revival_su as revival9_28_ from subscriber subscriber0_ where subscriber0_.login_su=? limit ?
Hibernate: select bookcopy0_.id_bc as id1_3_1_, bookcopy0_.book_id_bo as book5_3_1_, bookcopy0_.code_bc as code2_3_1_, bookcopy0_.condition_bc as condition3_3_1_, bookcopy0_.state_bc as state4_3_1_, book1_.id_bo as id1_1_0_, book1_.added_bo as added2_1_0_, book1_.alias_bo as alias3_1_0_, book1_.updated_bo as updated4_1_0_ from book_copy bookcopy0_ left outer join book book1_ on bookcopy0_.book_id_bo=book1_.id_bo where bookcopy0_.id_bc=?
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
====> Booking Booking [bookingPK = null, bookingDate = Thu Feb 21 14:44:48 CET 2013, addedDate = Wed Feb 20 14:44:48 CET 2013, state = 0]
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and (booking0_.date_boo between ? and ? or booking0_.date_boo between curdate() and ?)
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
BindingResult org.springframework.validation.BeanPropertyBindingResult: 0 errors
Hibernate: select subscriber0_.id_su as id1_28_, subscriber0_.blacklisted_su as blacklis2_28_, subscriber0_.booking_nb_su as booking3_28_, subscriber0_.confirmed_su as confirmed4_28_, subscriber0_.created_su as created5_28_, subscriber0_.email_su as email6_28_, subscriber0_.login_su as login7_28_, subscriber0_.password_su as password8_28_, subscriber0_.revival_su as revival9_28_ from subscriber subscriber0_ where subscriber0_.login_su=? limit ?
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and (booking0_.date_boo between ? and ? or booking0_.date_boo between curdate() and ?)
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
Hibernate: select booking0_.book_copy_id_bc as book1_6_0_, booking0_.subscriber_id_su as subscriber2_6_0_, booking0_.added_boo as added3_6_0_, booking0_.date_boo as date4_6_0_, booking0_.state_boo as state5_6_0_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
Hibernate: insert into booking (added_boo, date_boo, state_boo, book_copy_id_bc, subscriber_id_su) values (?, ?, ?, ?, ?)
Hibernate: select booking0_.book_copy_id_bc as book1_6_, booking0_.subscriber_id_su as subscriber2_6_, booking0_.added_boo as added3_6_, booking0_.date_boo as date4_6_, booking0_.state_boo as state5_6_ from booking booking0_ where booking0_.book_copy_id_bc=? and booking0_.subscriber_id_su=?
------------- ---------------- ---------------
------------- Standard Error -----------------
log4j:WARN No appenders could be found for logger (org.springframework.test.context.junit4.SpringJUnit4ClassRunner).
log4j:WARN Please initialize the log4j system properly.
log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
------------- ---------------- ---------------

Testcase: testBookingInvalid took 7,044 sec
Testcase: testValidBooking took 0,029 sec
